# $Id$

# This file is part of catcodec.
# catcodec is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
# catcodec is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with catcodec. If not, see <http://www.gnu.org/licenses/>.

#
# Creation of bundles
#

# The revision is needed for the bundle name and creating an OSX application bundle.
ifdef REVISION
REV := $(REVISION)
else
# Detect the revision
VERSIONS := $(shell AWK="$(AWK)" "$(ROOT_DIR)/findversion.sh")
REV      := $(shell echo "$(VERSIONS)" | cut -f 1 -d'	')
endif

# Make sure we have something in REV
ifeq ($(REV),)
REV := norev000
endif

ifndef BUNDLE_NAME
BUNDLE_NAME = catcodec-custom-$(REV)-$(OS)
endif

ifndef INSTALL_DOCS_DIR
INSTALL_DOCS_DIR := "$(DESTDIR)/usr/share/doc/catcodec"
endif

ifndef INSTALL_BINARY_DIR
INSTALL_BINARY_DIR := "$(DESTDIR)/usr/bin"
endif

ifndef INSTALL_MAN_DIR
INSTALL_MAN_DIR := "$(DESTDIR)/usr/share/man/man1"
endif


bundle: all
	@echo '[BUNDLE] Constructing bundle'
	$(Q)rm -rf   "$(BUNDLE_DIR)"
	$(Q)mkdir -p "$(BUNDLE_DIR)"
	$(Q)cp "$(CATCODEC)"                      "$(BUNDLE_DIR)/"
	$(Q)cp "$(ROOT_DIR)/COPYING"              "$(BUNDLE_DIR)/"
	$(Q)cp "$(ROOT_DIR)/changelog.txt"        "$(BUNDLE_DIR)/"
	$(Q)cp "$(ROOT_DIR)/docs/readme.txt"      "$(BUNDLE_DIR)/"
	$(Q)cp "$(ROOT_DIR)/docs/catcodec.1"      "$(BUNDLE_DIR)/"
	$(Q)gzip -9                               "$(BUNDLE_DIR)/catcodec.1"
ifeq ($(CATCODEC), catcodec.exe)
	$(Q)unix2dos "$(BUNDLE_DIR)/COPYING"
	$(Q)unix2dos "$(BUNDLE_DIR)/"*.txt
endif

install: bundle
	@echo '[INSTALL] Installing catcodec'
	$(Q)install -d "$(INSTALL_DOCS_DIR)"
	$(Q)install -d "$(INSTALL_BINARY_DIR)"
	$(Q)install -d "$(INSTALL_MAN_DIR)"
	$(Q)install -m 755 "$(BUNDLE_DIR)/$(CATCODEC)" "$(INSTALL_BINARY_DIR)/$(CATCODEC)"
	$(Q)install -m 644 "$(BUNDLE_DIR)/"*.txt "$(INSTALL_DOCS_DIR)"
	$(Q)install -m 644 "$(BUNDLE_DIR)/catcodec.1.gz" "$(INSTALL_MAN_DIR)/catcodec.1.gz"

### Packing the current bundle into several compressed file formats ###
#
# Zips & dmgs do not contain a root folder, i.e. they have files in the root of the zip/dmg.
# gzip, bzip2 and lha archives have a root folder, with the same name as the bundle.
#
# One can supply a custom name by adding BUNDLE_NAME:=<name> to the make command.
#
bundle_zip: bundle
	@echo '[BUNDLE] Creating $(BUNDLE_NAME).zip'
	$(Q)mkdir -p "$(BUNDLES_DIR)"
	$(Q)cd "$(BUNDLE_DIR)" && zip -r $(shell if test -z "$(VERBOSE)"; then echo '-q'; fi) "$(BUNDLES_DIR)/$(BUNDLE_NAME).zip" .

bundle_gzip: bundle
	@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.gz'
	$(Q)mkdir -p "$(BUNDLES_DIR)/.gzip/$(BUNDLE_NAME)"
	$(Q)cp -R    "$(BUNDLE_DIR)/"* "$(BUNDLES_DIR)/.gzip/$(BUNDLE_NAME)/"
	$(Q)cd "$(BUNDLES_DIR)/.gzip" && tar -zc$(shell if test -n "$(VERBOSE)"; then echo 'v'; fi)f "$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.gz" "$(BUNDLE_NAME)"
	$(Q)rm -rf   "$(BUNDLES_DIR)/.gzip"

bundle_bzip2: bundle
	@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.bz2'
	$(Q)mkdir -p "$(BUNDLES_DIR)/.bzip2/$(BUNDLE_NAME)"
	$(Q)cp -R    "$(BUNDLE_DIR)/"* "$(BUNDLES_DIR)/.bzip2/$(BUNDLE_NAME)/"
	$(Q)cd "$(BUNDLES_DIR)/.bzip2" && tar -jc$(shell if test -n "$(VERBOSE)"; then echo 'v'; fi)f "$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.bz2" "$(BUNDLE_NAME)"
	$(Q)rm -rf   "$(BUNDLES_DIR)/.bzip2"

bundle_lha: bundle
	@echo '[BUNDLE] Creating $(BUNDLE_NAME).lha'
	$(Q)mkdir -p "$(BUNDLES_DIR)/.lha/$(BUNDLE_NAME)"
	$(Q)cp -R    "$(BUNDLE_DIR)/"* "$(BUNDLES_DIR)/.lha/$(BUNDLE_NAME)/"
	$(Q)cd "$(BUNDLES_DIR)/.lha" && lha ao6 "$(BUNDLES_DIR)/$(BUNDLE_NAME).lha" "$(BUNDLE_NAME)"
	$(Q)rm -rf   "$(BUNDLES_DIR)/.lha"

bundle_dmg: bundle
	@echo '[BUNDLE] Creating $(BUNDLE_NAME).dmg'
	$(Q)mkdir -p "$(BUNDLES_DIR)/catcodec $(REV)"
	$(Q)cp -R "$(BUNDLE_DIR)/" "$(BUNDLES_DIR)/catcodec $(REV)"
	$(Q)hdiutil create -ov -format UDZO -srcfolder "$(BUNDLES_DIR)/catcodec $(REV)" "$(BUNDLES_DIR)/$(BUNDLE_NAME).dmg"
	$(Q)rm -fr "$(BUNDLES_DIR)/catcodec $(REV)"
